В этой папке содержатся следующие папки файлы:

data - папка, в которой хранятся фотографии, полученные с веб-камеры, распределенные по именам пользователей;

create_user.py - скрипт, который создает нового пользователя и сохраняет 100 фотографий с веб-камеры;

load_model.py - скрипт, который хранит функцию для загрузки сохраненной модели

model.py - скрипт, который создает и сохраняет модель распознавания лица;

photo_count.py - скрипт, который хранит функцию для подсчета количества фотографий в каталоге;

train.py - скрипт, который создает выходные признаки из имен папок для пользователей;

webka_predict - скрипт, который запускает веб-камеры и высвечивает имя распознанного пользователя;

haarcascade_frontalface_default.xml - сохраненные параметры модели поиска лица на фотографии;

labels.pickle - файл, который хранит сохраненные выходные признаки;

X_train.data - файл, который хранит обучающую выборку из фотографий в виде численного массива;

y_train.data - файл, который хранит метки пользователей для обучения создаваемой модели;

requirements.txt - список скриптов, которые необходимо запустить в командной строке для работы скриптов.

Если необходимо создать нового пользователя, для этого необходимо запустить скрипт create_user.py и после
выведенного сообщения "Введите имя пользователя" нужно ввести строку в виде латиницы. Далее нужно 
держать лицо перед включенной веб-камерой до тех пор, пока он не выключится. В итоге в папке нового
пользователя будет 100 фотографий. Далее нужно запустить скрипт train.py для обновления списка пользователей,
который будет выступать в виде выходного признака модели (y_train). Для обучения модели нужно использовать
скрипт model.py, который так же сохраняет её в отдельном файле с расширением .tflearn. Для тестирования
обученной модели запускается скрипт webka_predict.py. После включения веб-камеры нужно поставить лицо
перед веб-камерой, чтобы обученная модель могла распознать пользователя.